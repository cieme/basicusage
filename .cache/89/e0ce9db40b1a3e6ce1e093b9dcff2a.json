{"id":"node_modules/snabbdom/src/package/thunk.ts","dependencies":[{"name":"/Users/cieme/Desktop/vue_base/package.json","includedInParent":true,"mtime":1602589101000},{"name":"/Users/cieme/Desktop/vue_base/node_modules/snabbdom/package.json","includedInParent":true,"mtime":1602589279000},{"name":"./h","loc":{"line":4,"column":18},"parent":"/Users/cieme/Desktop/vue_base/node_modules/snabbdom/src/package/thunk.ts","resolved":"/Users/cieme/Desktop/vue_base/node_modules/snabbdom/src/package/h.ts"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.thunk = void 0;\nvar h_1 = require(\"./h\");\nfunction copyToThunk(vnode, thunk) {\n    vnode.data.fn = thunk.data.fn;\n    vnode.data.args = thunk.data.args;\n    thunk.data = vnode.data;\n    thunk.children = vnode.children;\n    thunk.text = vnode.text;\n    thunk.elm = vnode.elm;\n}\nfunction init(thunk) {\n    var cur = thunk.data;\n    var vnode = cur.fn.apply(undefined, cur.args);\n    copyToThunk(vnode, thunk);\n}\nfunction prepatch(oldVnode, thunk) {\n    var i;\n    var old = oldVnode.data;\n    var cur = thunk.data;\n    var oldArgs = old.args;\n    var args = cur.args;\n    if (old.fn !== cur.fn || oldArgs.length !== args.length) {\n        copyToThunk(cur.fn.apply(undefined, args), thunk);\n        return;\n    }\n    for (i = 0; i < args.length; ++i) {\n        if (oldArgs[i] !== args[i]) {\n            copyToThunk(cur.fn.apply(undefined, args), thunk);\n            return;\n        }\n    }\n    copyToThunk(oldVnode, thunk);\n}\nexports.thunk = function thunk(sel, key, fn, args) {\n    if (args === undefined) {\n        args = fn;\n        fn = key;\n        key = undefined;\n    }\n    return h_1.h(sel, {\n        key: key,\n        hook: { init: init, prepatch: prepatch },\n        fn: fn,\n        args: args\n    });\n};\n"},"sourceMaps":{"js":{"version":3,"file":"thunk.js","sourceRoot":"","sources":["node_modules/snabbdom/src/package/thunk.ts"],"names":[],"mappings":";;;AACA,yBAAuB;AAgBvB,SAAS,WAAW,CAAE,KAAY,EAAE,KAAY;IAC7C,KAAK,CAAC,IAAkB,CAAC,EAAE,GAAI,KAAK,CAAC,IAAkB,CAAC,EAAE,CAAC;IAC3D,KAAK,CAAC,IAAkB,CAAC,IAAI,GAAI,KAAK,CAAC,IAAkB,CAAC,IAAI,CAAA;IAC/D,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAA;IACvB,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAA;IAC/B,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAA;IACvB,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,CAAA;AACvB,CAAC;AAED,SAAS,IAAI,CAAE,KAAY;IACzB,IAAM,GAAG,GAAG,KAAK,CAAC,IAAiB,CAAA;IACnC,IAAM,KAAK,GAAI,GAAG,CAAC,EAAU,CAAC,KAAK,CAAC,SAAS,EAAE,GAAG,CAAC,IAAI,CAAC,CAAA;IACxD,WAAW,CAAC,KAAK,EAAE,KAAK,CAAC,CAAA;AAC3B,CAAC;AAED,SAAS,QAAQ,CAAE,QAAe,EAAE,KAAY;IAC9C,IAAI,CAAS,CAAA;IACb,IAAM,GAAG,GAAG,QAAQ,CAAC,IAAiB,CAAA;IACtC,IAAM,GAAG,GAAG,KAAK,CAAC,IAAiB,CAAA;IACnC,IAAM,OAAO,GAAG,GAAG,CAAC,IAAI,CAAA;IACxB,IAAM,IAAI,GAAG,GAAG,CAAC,IAAI,CAAA;IACrB,IAAI,GAAG,CAAC,EAAE,KAAK,GAAG,CAAC,EAAE,IAAK,OAAe,CAAC,MAAM,KAAM,IAAY,CAAC,MAAM,EAAE;QACzE,WAAW,CAAE,GAAG,CAAC,EAAU,CAAC,KAAK,CAAC,SAAS,EAAE,IAAI,CAAC,EAAE,KAAK,CAAC,CAAA;QAC1D,OAAM;KACP;IACD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAI,IAAY,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;QACzC,IAAK,OAAe,CAAC,CAAC,CAAC,KAAM,IAAY,CAAC,CAAC,CAAC,EAAE;YAC5C,WAAW,CAAE,GAAG,CAAC,EAAU,CAAC,KAAK,CAAC,SAAS,EAAE,IAAI,CAAC,EAAE,KAAK,CAAC,CAAA;YAC1D,OAAM;SACP;KACF;IACD,WAAW,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAA;AAC9B,CAAC;AAEY,QAAA,KAAK,GAAG,SAAS,KAAK,CAAE,GAAW,EAAE,GAAS,EAAE,EAAQ,EAAE,IAAU;IAC/E,IAAI,IAAI,KAAK,SAAS,EAAE;QACtB,IAAI,GAAG,EAAE,CAAA;QACT,EAAE,GAAG,GAAG,CAAA;QACR,GAAG,GAAG,SAAS,CAAA;KAChB;IACD,OAAO,KAAC,CAAC,GAAG,EAAE;QACZ,GAAG,EAAE,GAAG;QACR,IAAI,EAAE,EAAE,IAAI,MAAA,EAAE,QAAQ,UAAA,EAAE;QACxB,EAAE,EAAE,EAAE;QACN,IAAI,EAAE,IAAI;KACX,CAAC,CAAA;AACJ,CAAY,CAAA","sourcesContent":["import { VNode, VNodeData } from './vnode'\nimport { h } from './h'\n\nexport interface ThunkData extends VNodeData {\n  fn: () => VNode\n  args: any[]\n}\n\nexport interface Thunk extends VNode {\n  data: ThunkData\n}\n\nexport interface ThunkFn {\n  (sel: string, fn: Function, args: any[]): Thunk\n  (sel: string, key: any, fn: Function, args: any[]): Thunk\n}\n\nfunction copyToThunk (vnode: VNode, thunk: VNode): void {\n  (vnode.data as VNodeData).fn = (thunk.data as VNodeData).fn;\n  (vnode.data as VNodeData).args = (thunk.data as VNodeData).args\n  thunk.data = vnode.data\n  thunk.children = vnode.children\n  thunk.text = vnode.text\n  thunk.elm = vnode.elm\n}\n\nfunction init (thunk: VNode): void {\n  const cur = thunk.data as VNodeData\n  const vnode = (cur.fn as any).apply(undefined, cur.args)\n  copyToThunk(vnode, thunk)\n}\n\nfunction prepatch (oldVnode: VNode, thunk: VNode): void {\n  let i: number\n  const old = oldVnode.data as VNodeData\n  const cur = thunk.data as VNodeData\n  const oldArgs = old.args\n  const args = cur.args\n  if (old.fn !== cur.fn || (oldArgs as any).length !== (args as any).length) {\n    copyToThunk((cur.fn as any).apply(undefined, args), thunk)\n    return\n  }\n  for (i = 0; i < (args as any).length; ++i) {\n    if ((oldArgs as any)[i] !== (args as any)[i]) {\n      copyToThunk((cur.fn as any).apply(undefined, args), thunk)\n      return\n    }\n  }\n  copyToThunk(oldVnode, thunk)\n}\n\nexport const thunk = function thunk (sel: string, key?: any, fn?: any, args?: any): VNode {\n  if (args === undefined) {\n    args = fn\n    fn = key\n    key = undefined\n  }\n  return h(sel, {\n    key: key,\n    hook: { init, prepatch },\n    fn: fn,\n    args: args\n  })\n} as ThunkFn\n"]}},"error":null,"hash":"dc2d35e42c441fdcfc83def18467e67a","cacheData":{"env":{}}}